# ecommerce/.env
# This file should be placed in the root of your Django project (ltronix-shop/ecommerce/.env)
# and should NOT be committed to version control (e.g., add it to .gitignore).

# --- Django Core Settings ---
# Django Secret Key (VERY IMPORTANT - GENERATE A STRONG, UNIQUE ONE FOR PRODUCTION)
# You can generate one using Python:
# import os
# import secrets
# print(secrets.token_urlsafe(50))
DJANGO_SECRET_KEY=08tnz*jup6*6s!vpf%u5u**=@m197&67%vmrd4!tmd4qdc
DEBUG=True

# --- Database Settings ---
# Used by django-environ's env.db() to configure your database connection.
# For local PostgreSQL, ensure your database server is running.
DATABASE_ENGINE=django.db.backends.postgresql
DATABASE_NAME=ndunguloren96
DATABASE_USER=ndunguloren96
DATABASE_PASSWORD=962204
DATABASE_HOST=localhost
DATABASE_PORT=5432

# Alternative: If you prefer to use a single DATABASE_URL string (uncomment and configure if needed)
# DATABASE_URL=postgresql://ndunguloren96:962204@localhost:5432/ndunguloren96


# --- M-Pesa Settings (for django-daraja) ---
MPESA_CONSUMER_KEY=Ho5xpPlzH5mtGvMAQmfwB2jXSw9Z9uEGIeAGDgiVY0NSl8VF
MPESA_CONSUMER_SECRET=xBQbM4fA1cNA3duyFuiKDaKZGd5YDT6yvCwYApINB9wyhzPAr5A9AG2jwootQ96T
MPESA_EXPRESS_SHORTCODE=174379
MPESA_PASSKEY=bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919
MPESA_ENV=sandbox # Set to 'production' for live M-Pesa
MPESA_SHORTCODE=0000

# M-Pesa STK Push Callback URL for local Ngrok testing (Django backend's Ngrok URL)
# IMPORTANT: Update this whenever your Ngrok URL for Django changes!
MPESA_CALLBACK_URL=https://man-fond-tortoise.ngrok-free.app/mpesa/stk_push_callback/

# Test Credentials (for reference, not used by Django-Daraja directly from here)
# InitiatorName=testapi
# InitiatorPassword=Safaricom123!!
# PartyA=600990
# PartyB=600000
# PhoneNumber=254716941474 #receives the MPESA PIN prompt
# BusinessShortCode=174379
# PassKey=bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919


# --- Email Settings for Development ---
# For local development, use Mailpit/Mailhog (recommended) or console backend.
# Mailpit/Mailhog: Run 'mailpit' in your terminal and visit http://localhost:8025
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend # Handled in base/development.py now
# EMAIL_HOST=localhost # Handled in base/development.py now
# EMAIL_PORT=1025 # Handled in base/development.py now
# EMAIL_USE_TLS=False # Handled in base/development.py now
# EMAIL_HOST_USER= # Handled in base/development.py now
# EMAIL_HOST_PASSWORD= # Handled in base/development.py now
DEFAULT_FROM_EMAIL=noreply@ltronix-shop.com # Keep here for base setting

# --- Part 7 Additions: SendGrid & Sentry DSNs ---
SENDGRID_API_KEY=your_sendgrid_api_key_here # Get this from your SendGrid account
SENTRY_DSN="https://4212a72316d9ba7ca5100b47a0b37fa3@o4509555378356225.ingest.us.sentry.io/4509564238430208"
SENTRY_DSN_DEVELOPMENT="https://4212a72316d9ba7ca5100b47a0b37fa3@o4509555378356225.ingest.us.sentry.io/4509564238430208"
DJANGO_ENVIRONMENT=development # or 'production', 'staging'
RELEASE_VERSION=1.0.0 # Define a release version for Sentry

# --- CORS (Cross-Origin Resource Sharing) Settings ---
# Origins allowed to make browser requests to your Django backend API.
# MUST include your Next.js frontend's development URL.
# ONLY EXACT ORIGINS HERE. Regexes handled in settings/development.py
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://man-fond-tortoise.ngrok-free.app


# --- CSRF Trusted Origins ---
# Origins from which Django trusts incoming CSRF-protected requests.
# MUST include your Next.js frontend's development URL.
# ONLY EXACT ORIGINS HERE.
CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://man-fond-tortoise.ngrok-free.app


# --- Django Password Reset Confirmation URL (Frontend URL) ---
# This URL is used by Django to construct the password reset email link.
# It MUST point to your Next.js frontend's password reset confirmation page.
DJANGO_PASSWORD_RESET_CONFIRM_URL=http://localhost:3000/auth/password-reset-confirm/{uid}/{token}


# --- Google OAuth2 Credentials (for Django's drf-social-oauth2 / social-auth-app-django) ---
# These come from your Google Cloud Console project.
# They should be the SAME as the GOOGLE_CLIENT_ID/SECRET used by NextAuth.js.
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=434917669665-g9id9hli8c71fpa4fkhsi57ho8a7ta8o.apps.googleusercontent.com
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=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

# Google OAuth2 Redirect URI (for Django's social-auth-app-django)
# This is the backend URL where Google *could* redirect (though NextAuth.js handles the primary redirect).
# It should match an Authorized redirect URI in your Google Cloud Console OAuth 2.0 Client IDs.
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI=http://127.0.0.1:8000/api/auth/complete/google-oauth2/

# Indicates if social authentication redirects should use HTTPS.
# Set to `True` for production, or if your local Django dev server is accessed via HTTPS (e.g., Ngrok).
SOCIAL_AUTH_REDIRECT_IS_HTTPS=False # Set to True if your Django's Ngrok URL is HTTPS


# --- Next.js Frontend Environment Variables (for reference in Django's .env) ---
# These are the variables that your Next.js frontend will read from its own .env.local
# They are included here for completeness and to ensure consistency in values.

# Next.js Frontend API Base URL (used in Next.js files to call Django backend)
NEXT_PUBLIC_DJANGO_API_URL=http://127.0.0.1:8000/api/v1 # For development
#changed to i do not know if it is correct. I changed for backend and frontend.
# If Next.js calls Django via Ngrok
# NEXT_PUBLIC_DJANGO_API_URL=https://man-fond-tortoise.ngrok-free.app/api


# NextAuth.js Base URL (Frontend's own URL)
# IMPORTANT: This MUST match the "Authorized redirect URIs" in Google Cloud Console
# and your Next.js frontend's actual URL (local or Ngrok).
NEXTAUTH_URL=http://localhost:3000
# NEXTAUTH_URL=https://man-fond-tortoise.ngrok-free.app # If your Next.js frontend is also exposed via Ngrok

# NextAuth.js Google OAuth Provider Credentials (used in Next.js)
# These should be the SAME as SOCIAL_AUTH_GOOGLE_OAUTH2_KEY/SECRET.
GOOGLE_CLIENT_ID=434917669665-g9id9hli8c71fpa4fkhsi57ho8a7ta8o.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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

# NextAuth.js Secret (generate with `openssl rand -base64 32`)
NEXTAUTH_SECRET=D84E4CCE28EEEDF24FEF862F7EF6F


# --- Production Placeholders (DO NOT UNCOMMENT OR USE IN DEV) ---
# These values will be set directly in your production server's environment variables
# (e.g., Docker, Kubernetes, AWS Secrets Manager, Heroku Config Vars).
# DJANGO_SECRET_KEY_PROD=a_different_strong_secret_for_production
# DEBUG_PROD=False
# ALLOWED_HOSTS_PROD=your-production-backend-domain.com,api.your-production-backend-domain.com
# DATABASE_URL_PROD=postgresql://produser:prodpass@prod_db_host:5432/prod_db_name
# MPESA_CALLBACK_URL_PROD=https://your-production-backend.com/mpesa/stk_push_callback/
# MPESA_ENV_PROD=production
# EMAIL_BACKEND_PROD=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST_PROD=smtp.your-email-service.com
# EMAIL_PORT_PROD=587
# EMAIL_USE_TLS_PROD=True
# EMAIL_HOST_USER_PROD=your_email_user
# EMAIL_HOST_PASSWORD_PROD=your_email_password
# DEFAULT_FROM_EMAIL_PROD=noreply@yourdomain.com
# CORS_ALLOWED_ORIGINS_PROD=https://your-production-frontend.com
# CSRF_TRUSTED_ORIGINS_PROD=https://your-production-frontend.com
# DJANGO_PASSWORD_RESET_CONFIRM_URL_PROD=https://your-production-frontend.com/auth/password-reset-confirm/{uid}/{token}
# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY_PROD=your_prod_google_client_id
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET_PROD=your_prod_google_client_secret
# SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI_PROD=https://your-backend-domain.com/api/auth/complete/google-oauth2/
# SOCIAL_AUTH_REDIRECT_IS_HTTPS_PROD=True
# NEXT_PUBLIC_DJANGO_API_URL_PROD=https://your-backend-domain.com/api
# NEXTAUTH_URL_PROD=https://your-production-frontend.com
# GOOGLE_CLIENT_ID_PROD=your_prod_google_client_id
# GOOGLE_CLIENT_SECRET_PROD=your_prod_google_client_secret
# NEXTAUTH_SECRET_PROD=another_very_strong_random_string_for_production

